diff --git src/ngx_http_lua_bodyfilterby.c src/ngx_http_lua_bodyfilterby.c
index 78e3b5c2..bfdb01b3 100644
--- src/ngx_http_lua_bodyfilterby.c
+++ src/ngx_http_lua_bodyfilterby.c
@@ -22,6 +22,9 @@
 #include "ngx_http_lua_misc.h"
 #include "ngx_http_lua_consts.h"
 #include "ngx_http_lua_output.h"
+#if (NGX_HTTP_API)
+#include "ngx_http_api_module.h"
+#endif


 static void ngx_http_lua_body_filter_by_lua_env(lua_State *L,
@@ -242,6 +245,12 @@ ngx_http_lua_body_filter(ngx_http_request_t *r, ngx_chain_t *in)
     ngx_log_debug1(NGX_LOG_DEBUG_HTTP, r->connection->log, 0,
                    "lua body filter for user lua code, uri \"%V\"", &r->uri);

+    #if (NGX_HTTP_API)
+        if (ngx_http_api_is_body_filter_by_lua_skipped(r)) {
+            return ngx_http_next_body_filter(r, in);
+        }
+    #endif
+
     llcf = ngx_http_get_module_loc_conf(r, ngx_http_lua_module);

     if (llcf->body_filter_handler == NULL || r->header_only) {
diff --git src/ngx_http_lua_headerfilterby.c src/ngx_http_lua_headerfilterby.c
index 86c58754..1bc946cd 100644
--- src/ngx_http_lua_headerfilterby.c
+++ src/ngx_http_lua_headerfilterby.c
@@ -19,6 +19,9 @@
 #include "ngx_http_lua_string.h"
 #include "ngx_http_lua_misc.h"
 #include "ngx_http_lua_consts.h"
+#if (NGX_HTTP_API)
+#include "ngx_http_api_module.h"
+#endif
 
 
 static ngx_http_output_header_filter_pt ngx_http_next_header_filter;
@@ -80,6 +83,12 @@ ngx_http_lua_header_filter_by_chunk(lua_State *L, ngx_http_request_t *r)
 #endif
     ngx_http_lua_ctx_t          *ctx;
 
+#if (NGX_HTTP_API)
+    if (ngx_http_api_is_header_filter_by_lua_skipped(r)) {
+        return NGX_OK;
+    }
+#endif
+
     ctx = ngx_http_get_module_ctx(r, ngx_http_lua_module);
     if (ctx->exited) {
         old_exit_code = ctx->exit_code;
